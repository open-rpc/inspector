{"version":3,"sources":["themes/openrpcTheme.ts","helpers/openrpcDocumentToJSONRPCSchema.ts","hooks/useMonacoVimMode.ts","containers/JSONRPCRequestEditor.tsx","hooks/useTabs.ts","components/TransportDropdown.tsx","hooks/useTransport.ts","containers/OptionsEditor.tsx","containers/Inspector.tsx","hooks/useQueryParams.ts","containers/App.tsx","index.tsx"],"names":["lightTheme","createMuiTheme","props","MuiAppBar","position","MuiCard","elevation","overrides","root","background","palette","default","darkTheme","type","grey","paper","MuiTable","MuiTypography","color","schema","jsonrpc","enum","description","id","oneOf","method","openrpcDocumentToJSONRPCSchema","openrpcDocument","properties","methods","map","const","name","summary","markdownDescription","allOf","if","then","params","minItems","filter","param","required","length","maxItems","defaultSnippets","examples","example","label","body","ex","value","items","additionalProperties","reduce","memo","initVimMode","require","useMonacoVimMode","editor","useState","vimMode","setVimMode","useEffect","addAction","keybindings","monaco","chord","CtrlCmd","KEY_K","KEY_V","contextMenuGroupId","contextMenuOrder","run","dispose","JSONRPCRequestEditor","setEditor","windowSize","useWindowSize","layout","modelName","info","title","modelUriString","Math","random","modelUri","parse","model","createModel","setModel","addDiagnostics","toString","height","width","editorDidMount","_","ed","editorOptions","minimap","enabled","automaticLayout","fixedOverflowWidgets","language","onChange","ev","emptyJSONRPC","useTabs","defaultTabs","tabIndex","setTabIndex","content","url","undefined","logs","tabs","setTabs","setTabName","tab","newTabs","innerTab","setTabContent","ti","i","setTabEditing","editing","handleClose","event","index","t","handleLabelChange","target","setTabUrl","setTabLogs","setTabOpenRPCDocument","TransportDropdown","selectedTransport","transports","style","onAddTransport","anchorEl","setAnchorEl","dialogOpen","setDialogOpen","selectedCustomTransport","setSelectedCustomTransport","customTransportName","setCustomTransportName","customTransportUri","setCustomTransportUri","dialogMenuAnchorEl","setDialogMenuAnchorEl","Dialog","onClose","aria-labelledby","open","Container","maxWidth","Grid","container","justify","alignItems","padding","paddingTop","paddingBottom","marginTop","Typography","variant","gutterBottom","direction","spacing","item","InputBase","placeholder","display","borderRadius","marginRight","Button","onClick","currentTarget","Menu","keepMounted","Boolean","transport","MenuItem","handleCustomTransportDialogMenuItemClick","marginBottom","uri","disabled","marginLeft","endIcon","handleMenuItemClick","getTransportFromType","transportOptions","a","async","localTransportType","find","localTransport","WebSocketTransport","HTTPTransport","PostMessageIframeTransport","PostMessageWindowTransport","intermediateTransport","InterTransport","connect","sendData","internalID","request","results","subscribe","data","transportRequestManager","transportEventChannel","emit","unsubscribe","close","Transport","useTransport","defaultTransportType","setTransport","transportConnected","setTransportConnected","transportType","setTransportType","error","setError","catch","e","doSetTransport","OptionsEditor","lineNumbers","glyphMargin","folding","useCustomTransportList","createPersistedState","defaultTransports","headers","patternProperties","credentials","errorToJSON","Error","emptyErrorResponse","code","message","Inspector","setOpenRpcDocument","json","setJson","customTransport","transportList","setTransportList","setUrl","useDebounce","debouncedUrl","setSelectedTransport","setTransportOptions","debouncedtransportOptions","connected","historyOpen","setHistoryOpen","requestHistory","setRequestHistory","historySelectedIndex","setHistorySelectedIndex","setLogs","s","tp","toLowerCase","handlePlayButton","requestTimestamp","Date","result","responseTimestamp","r","reqObj","timestamp","payload","resObj","newHistory","prevLogs","convertedError","d","parseOpenRPCDocument","doc","notification","notificationObj","refreshOpenRpcDocument","Tooltip","IconButton","List","overflowY","requestHistoryItem","historyIndex","ListItem","button","selected","ListItemText","primary","secondary","JSON","stringify","Tabs","indicatorColor","newValue","Tab","disableRipple","border","outline","userSelect","onDoubleClick","onBlur","autoFocus","textTransform","right","top","size","minWidth","scale","AppBar","zIndex","Toolbar","alt","src","addedTransport","changedTransport","fontSize","startAdornment","green","textAlign","window","cursor","fullWidth","hideToggleTheme","onToggleDarkMode","darkMode","split","minSize","maxSize","defaultSize","pane2Style","overflow","flexGrow","val","jsonResult","console","optionsString","startIcon","sidebarOpen","sidebarAlign","openRecentPayload","useQueryParams","depth","qs","location","search","ignoreQueryPrefix","decoder","str","test","parseInt","decodeURIComponent","App","useDarkMode","query","theme","setTheme","CssBaseline","toggle","ReactDOM","render","document","getElementById"],"mappings":"qTAGaA,EAAaC,YAAe,CACvCC,MAAO,CACLC,UAAW,CACTC,SAAU,UAEZC,QAAS,CACPC,UAAW,IAGfC,UAAW,CACTJ,UAAW,CACTK,KAAM,CACJC,WAAY,qBAIlBC,QAAS,CACPD,WAAY,CACVE,QAAS,WAKFC,EAAYX,YAAe,CACtCC,MAAO,CACLC,UAAW,CACTC,SAAU,UAEZC,QAAS,CACPC,UAAW,IAGfI,QAAS,CACPG,KAAM,OACNJ,WAAY,CACVE,QAASG,IAAK,KACdC,MAAOD,IAAK,OAGhBP,UAAW,CACTJ,UAAW,CACTK,KAAM,CACJC,WAAY,2BAGhBO,SAAU,CACRR,KAAM,CACJC,WAAY,2BAGhBQ,cAAe,CACbT,KAAM,CACJU,MAAOJ,IAAK,U,2GCrDdK,EAEQ,CACVC,QAAS,CACPP,KAAM,SACNQ,KAAM,CAAC,OACPC,YAAa,2BAEfC,GAAI,CACFD,YAAa,6CACbE,MAAO,CACL,CACEX,KAAM,UAER,CACEA,KAAM,YAIZY,OAAQ,CACNZ,KAAM,WAqFGa,EAhFwB,SAACC,GACtC,MAAO,CACLd,KAAM,SACNe,WAAY,CACVL,GAAG,eACEJ,EAAkBI,IAEvBH,QAAQ,eACHD,EAAkBC,SAEvBK,OAAQ,CACNZ,KAAM,SACNW,MAAOG,GAAmBA,EAAgBE,SAAWF,EAAgBE,QAAQC,KAAI,SAACL,GAChF,MAAO,CACLM,MAAON,EAAOO,KACdV,YAAaG,EAAOH,aAAeG,EAAOQ,QAC1CC,oBAAqBT,EAAOH,aAAeG,EAAOQ,cAK1DE,MAAOR,GAAmBA,EAAgBE,SAAWF,EAAgBE,QAAQC,KAAI,SAACL,GAChF,MAAO,CACLW,GAAI,CACFR,WAAY,CACVH,OAAQ,CACNM,MAAON,EAAOO,QAIpBK,KAAM,CACJT,WAAY,CACVU,OAAQ,CACNd,MAAO,CACL,CACEX,KAAM,QACN0B,SAAUd,EAAOa,QAAUb,EAAOa,OAAOE,QAAO,SAACC,GAAD,OAAgBA,EAAMC,YAAUC,OAChFC,SAAUnB,EAAOa,QAAUb,EAAOa,OAAOK,OACzCE,gBAAiBpB,EAAOqB,SAAWrB,EAAOqB,SAAShB,KAAI,SAACiB,GACtD,MAAO,CACLC,MAAOD,EAAQf,KACfV,YAAayB,EAAQzB,aAAeyB,EAAQd,QAC5CgB,KAAMF,EAAQT,QAAUS,EAAQT,OAAOR,KAAI,SAACoB,GAAD,OAAuBA,EAAGC,aAEpE,GACLC,MAAO3B,EAAOa,QAAUb,EAAOa,OAAOR,KAAI,SAACW,GACzC,OAAO,eACFA,EAAMtB,OADX,CAEEe,oBAAqBO,EAAMnB,aAAemB,EAAMR,QAChDX,YAAamB,EAAMnB,aAAemB,EAAMR,QACxCoB,sBAAsB,QAI5B,CACExC,KAAM,SACNe,WAAYH,EAAOa,QAAWb,EAAOa,OAClCgB,QAAO,SAACC,EAAWd,GAWlB,MAV4B,kBAAjBA,EAAMtB,OACfoC,EAAKd,EAAMT,MAAX,eACKS,EAAMtB,OADX,CAEEe,oBAAqBO,EAAMnB,aAAemB,EAAMR,QAChDX,YAAamB,EAAMnB,aAAemB,EAAMR,QACxCoB,sBAAsB,IAGxBE,EAAKd,EAAMT,MAAQS,EAAMtB,OAEpBoC,IACN,eC9FfC,EAAgBC,EAAQ,KAAxBD,YAqCOE,EAjCU,SAACC,GAA6D,IAAD,EAChCC,qBADgC,mBAC7EC,EAD6E,KACpEC,EADoE,KA8BpF,OA3BAC,qBAAU,WACR,GAAKJ,EAkBL,OAhBAA,EAAOK,UAAU,CACfzC,GAAI,WACJyB,MAAO,WACPiB,YAAa,CACXC,SAAcC,MAAMD,SAAcE,QAAUF,UAAeG,MAAOH,SAAcE,QAAUF,UAAeI,QAE3GC,mBAAoB,aACpBC,iBAAkB,IAClBC,IAAK,WACCZ,GACFA,EAAQa,UAEVZ,EAAWN,EAAYG,OAIpB,WACDE,GACFA,EAAQa,aAIX,CAACf,IAEG,CAACA,EAAQE,ICwEHc,EA5FgC,SAACzE,GAAW,IAAD,EAC5B0D,qBAD4B,mBACjDD,EADiD,KACzCiB,EADyC,KAExDlB,EAAiBC,GACjB,IAAMkB,EAAaC,MACnBf,qBAAU,WACJJ,GACFA,EAAOoB,WAER,CAACF,EAAYlB,IAEhBI,qBAAU,WACR,GAAKJ,EAAL,CAGA,IAAMqB,EAAa9E,EAAMyB,iBAAmBzB,EAAMyB,gBAAgBsD,KAAQ/E,EAAMyB,gBAAgBsD,KAAKC,MAAQ,YACvGC,EAAc,qBAAiBH,EAAjB,YAA8BI,KAAKC,SAAnC,SACdC,EAAWpB,MAAWqB,MAAMJ,GAC5BK,EAAQtB,SAAcuB,YAAYvF,EAAMiD,OAAS,GAAI,OAAQmC,GACnE3B,EAAO+B,SAASF,GAChB,IAAIrE,EAAc,CAChBN,KAAM,SACNe,WAAY,CACVR,QAAS,CACPP,KAAM,SACNkB,MAAO,OAETR,GAAI,CACFC,MAAO,CACL,CACEX,KAAM,UAER,CACEA,KAAM,YAIZY,OAAQ,CACNZ,KAAM,YAMVM,EADEjB,EAAMyB,gBACCD,EAA+BxB,EAAMyB,iBAErC,CACP0B,sBAAsB,EACtBzB,WAAW,eACNT,EAAOS,WADF,CAERU,OAAQ,CACNd,MAAO,CACL,CAAEX,KAAM,SACR,CAAEA,KAAM,eAMlB8E,yBAAeL,EAASM,WAAYzE,EAAQ+C,MAG3C,CAAChE,EAAMyB,gBAAiBgC,IAY3B,OACE,kBAAC,IAAD,CACEkC,OAAO,OACPC,MAAM,OACN3C,MAAOjD,EAAMiD,MACb4C,eAfJ,SAA8BC,EAAQC,GACpCrB,EAAUqB,IAeRC,cAAe,CACbC,QAAS,CACPC,SAAS,GAEXC,iBAAiB,EACjBC,sBAAsB,GAExBC,SAAS,OACTC,SApBiB,SAACC,EAAStD,GACzBjD,EAAMsG,UACRtG,EAAMsG,SAASrD,O,oVCxEfuD,GAAe,CACnBtF,QAAS,MACTK,OAAQ,GACRa,OAAQ,GACRf,GAAI,GAiISoF,GA9HC,SAACC,GAA0B,IAAD,EACRhD,mBAAS,GADD,mBACjCiD,EADiC,KACvBC,EADuB,OAESlD,mBAC/CgD,GAAe,CAAC,CAAE5E,KAAM,UAAW+E,QAASL,GAAcM,SAAKC,EAAWC,KAAM,MAH1C,mBAEjCC,EAFiC,KAE3BC,EAF2B,KAcxCrD,qBAAU,WACJoD,EAAKxE,SAAWkE,GAClBC,EAAYD,EAAW,KAExB,CAACM,EAAMN,IAEV,IAAMQ,EAAa,SAACC,EAAWtF,GAC7B,IAAMuF,EAAUJ,EAAKrF,KAAI,SAAC0F,GACxB,OAAIA,IAAaF,EACR,eACFE,EADL,CAEExF,SAGGwF,KAETJ,EAAQG,IAgFV,MAAO,CACLE,cAjBoB,SAACC,EAAYX,GACjC,IAAMQ,EAAUJ,EAAKrF,KAAI,SAAC0F,EAAUG,GAClC,OAAIA,IAAMD,EACD,eACFF,EADL,CAEET,YAGGS,KAETJ,EAAQG,IAQRK,cA/EoB,SAACN,EAAWO,GAChC,IAAMN,EAAUJ,EAAKrF,KAAI,SAAC0F,GACxB,OAAIA,IAAaF,EACR,eACFE,EADL,CAEEK,YAGGL,KAETJ,EAAQG,IAsERT,cACAO,aACAF,OACAC,UACAU,YA/GkB,SAACC,EAA6BC,GAChD,GAAoB,IAAhBb,EAAKxE,OAAT,CAGA,IAAMsF,EAAId,EAAK3E,QAAO,SAAC8E,EAAKK,GAAN,OAAYA,IAAMK,KACxCZ,EAAQa,KA2GRpB,WACAqB,kBAZwB,SAACzB,EAASa,GAClCD,EAAWC,EAAKb,EAAG0B,OAAOhF,QAY1BiF,UApDgB,SAACV,EAAYV,GAC7B,IAAMO,EAAUJ,EAAKrF,KAAI,SAAC0F,EAAUG,GAClC,OAAIA,IAAMD,EACD,eACFF,EADL,CAEER,QAGGQ,KAETJ,EAAQG,IA2CRc,WAxCiB,SAACX,EAAYR,GAC9B,IAAMK,EAAUJ,EAAKrF,KAAI,SAAC0F,EAAUG,GAClC,OAAIA,IAAMD,EACD,eACFF,EADL,CAEEN,SAGGM,KAETJ,EAAQG,IA+BRe,sBA5E4B,SAACZ,EAAY/F,GACzC,IAAM4F,EAAUJ,EAAKrF,KAAI,SAAC0F,EAAUG,GAClC,OAAIA,IAAMD,EACH/F,EASE,eACF6F,EADL,CAEE7F,oBAVO,CACLK,KAAMwF,EAASxF,KACf+E,QAASS,EAAST,QAClBG,KAAMM,EAASN,KACfW,QAASL,EAASK,QAClBb,IAAKQ,EAASR,KAQbQ,KAETJ,EAAQG,M,uECiFGgB,GAvJ6B,SAAC,GAAwE,IAAtEC,EAAqE,EAArEA,kBAAmBC,EAAkD,EAAlDA,WAAYjC,EAAsC,EAAtCA,SAAUkC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,eAAqB,EAalF/E,mBAA6B,MAbqD,mBAa3GgF,EAb2G,KAajGC,EAbiG,OAc9EjF,oBAAkB,GAd4D,mBAc3GkF,EAd2G,KAc/FC,EAd+F,OAgBpDnF,qBAhBoD,mBAgB3GoF,EAhB2G,KAgBlFC,EAhBkF,OAiB5DrF,qBAjB4D,mBAiB3GsF,EAjB2G,KAiBtFC,EAjBsF,OAkB9DvF,qBAlB8D,mBAkB3GwF,EAlB2G,KAkBvFC,EAlBuF,OAoB9DzF,mBAA6B,MApBiC,mBAoB3G0F,EApB2G,KAoBvFC,EApBuF,KA+ClH,OACE,yBAAKb,MAAOA,GACV,kBAACc,EAAA,EAAD,CAAQC,QAAS,kBAAMV,GAAc,IAAQW,kBAAgB,sBAAsBC,KAAMb,GACvF,kBAACc,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,gBACRC,WAAW,SACXvB,MAAO,CAAEwB,QAAS,OAAQC,WAAY,OAAQC,cAAe,OAAQC,UAAW,SAChF,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,2BACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,UAAUC,cAAY,GAA1C,+GAIA,kBAACV,EAAA,EAAD,CAAMC,WAAS,EAACU,UAAU,SAASC,QAAS,GAC1C,kBAACZ,EAAA,EAAD,CAAMa,MAAI,GACR,kBAACC,GAAA,EAAD,CAAWC,YAAY,cACrBrE,SACE,SAACuB,GACCoB,EAAuBpB,EAAMI,OAAOhF,QAGxCuF,MAAO,CACLoC,QAAS,QACTrK,WAAY,kBACZsK,aAAc,MACdb,QAAS,WACTc,YAAa,UAInB,kBAAClB,EAAA,EAAD,CAAMa,MAAI,GACR,kBAACC,GAAA,EAAD,CAAWC,YAAY,aACrBrE,SACE,SAACuB,GACCsB,EAAsBtB,EAAMI,OAAOhF,QAGvCuF,MAAO,CACLoC,QAAS,QACTrK,WAAY,kBACZsK,aAAc,MACdb,QAAS,WACTc,YAAa,UAInB,kBAAClB,EAAA,EAAD,CAAMa,MAAI,GACR,kBAACM,GAAA,EAAD,CACEV,QAAQ,WACRW,QAxEyB,SAACnD,GACxCwB,EAAsBxB,EAAMoD,iBAwEbnC,EAA0BA,EAAwBhH,KAAO,wBAIhE,kBAACoJ,GAAA,EAAD,CACE7J,GAAG,iBACHqH,SAAUU,EACV+B,aAAW,EACX1B,KAAM2B,QAAQhC,GACdG,QArFoB,WAC9BF,EAAsB,QAsFXd,EAAWjG,QAAO,SAACW,GAAD,MAA0B,WAAfA,EAAMtC,QAAmBiB,KAAI,SAACyJ,EAAW5D,GAAZ,OACzD,kBAAC6D,GAAA,EAAD,CACEN,QAAS,kBAlFwB,SAACK,GAChDhC,EAAsB,MACtBN,EAA2BsC,GAgFEE,CAAyCF,KACxDA,EAAUvJ,UAGhB,kBAACiJ,GAAA,EAAD,CACEvC,MAAO,CAAE2B,UAAW,OAAQqB,aAAc,QAC1CR,QAnFwB,YAClC3B,EAAsB,MAClBP,GAA2BE,GAAuBE,KAOpDT,EANsB,CACpB9H,KAAM,SACN0K,UAAWvC,EACXhH,KAAMkH,EACNyC,IAAKvC,IAGPL,GAAc,KA0EN6C,UAAW1C,IAAwBE,IAAuBJ,EAC1DuB,QAAQ,aAJV,oBAUN,kBAACU,GAAA,EAAD,CACEvC,MAAO,CACLsC,YAAa,OACba,WAAY,OAEdtB,QAAQ,WACRW,QAlIc,SAACnD,GACnBc,EAAYd,EAAMoD,gBAiIQW,QAAS,kBAAC,KAAD,OAC/BtD,GAAqBA,EAAkBxG,MACzC,kBAACoJ,GAAA,EAAD,CACE7J,GAAG,iBACHqH,SAAUA,EACVyC,aAAW,EACX1B,KAAM2B,QAAQ1C,GACda,QAtIc,WAClBZ,EAAY,QAuIPJ,EAAW3G,KAAI,SAACyJ,EAAW5D,GAAZ,OACd,kBAAC6D,GAAA,EAAD,CAAUN,QAAS,kBAtIC,SAACK,GAC3B1C,EAAY,MAEZrC,EAAS+E,GAmIsBQ,CAAoBR,KAAaA,EAAUvJ,SAEtE,kBAACwJ,GAAA,EAAD,CAAUN,QAAS,kBAAMnC,GAAc,KACrC,kBAAC,IAAD,CAAUL,MAAO,CAAEsC,YAAa,SAAW,kBAACV,EAAA,EAAD,CAAYC,QAAQ,WAApB,qB,sECzI/CyB,GAAuB,SAAvBA,EACJL,EACAlD,EACA8C,EACAU,GAJ2B,qBAAAC,EAAAC,OAAA,mDAUM,eAAX,QAHhBC,EAAqB3D,EAAW4D,MAAK,SAAClJ,GAC1C,OAAOA,EAAMtC,OAAS0K,EAAU1K,MAAQsC,EAAMnB,OAASuJ,EAAUvJ,eAE7C,IAAlBoK,OAAA,EAAAA,EAAoBvL,MAVG,gBAWzByL,EAAiB,IAAIC,sBAAmBZ,GAXf,0BAYa,UAAX,OAAlBS,QAAkB,IAAlBA,OAAA,EAAAA,EAAoBvL,MAZJ,gBAazByL,EAAiB,IAAIE,iBAAcb,EAAKM,GAbf,0BAca,uBAAX,OAAlBG,QAAkB,IAAlBA,OAAA,EAAAA,EAAoBvL,MAdJ,iBAezByL,EAAiB,IAAIG,8BAA2Bd,GAfvB,2BAgBa,uBAAX,OAAlBS,QAAkB,IAAlBA,OAAA,EAAAA,EAAoBvL,MAhBJ,iBAiBzByL,EAAiB,IAAII,8BAA2Bf,GAjBvB,2BAkBa,YAAX,OAAlBS,QAAkB,IAAlBA,OAAA,EAAAA,EAAoBvL,MAlBJ,oCAAAqL,EAAA,MAmBWF,EAClCI,EAAmBT,IACnBlD,EACA2D,EAAmBb,YAtBI,QAmBnBoB,EAnBmB,OAwBnBC,EAxBmB,6MAAAV,EAAAC,OAAA,kEAAAD,EAAA,MA0BfS,EAAsBE,WA1BP,yBAAAX,EAAA,MA2BCS,EAAsBG,SAAS,CACnDC,WAAY,EACZC,QAAS,CACP5L,QAAS,MACTK,OAAQ,UACRa,OAAQ,CAACqJ,GACTpK,GAAI,MAjCa,cA2Bf0L,EA3Be,OAoCrBN,EAAsBO,UAAU,gBAAgB,SAACC,GAC/C,EAAKC,wBAAwBC,sBAAsBC,KAAK,eAAgBH,MAE1ER,EAAsBO,UAAU,SAAS,SAACC,GACxC,EAAKC,wBAAwBC,sBAAsBC,KAAK,QAASH,MAxC9C,kBA0CdF,GA1Cc,sEA4CPE,GACd,OAAOR,EAAsBG,SAAS,CACpCC,WAAY,EACZC,QAAS,CACP5L,QAAS,MACTK,OAAQ,WACRa,OAAQ,CAAC6K,EAAKH,SACdzL,GAAI,OAnDa,8BAwDrBoL,EAAsBY,cACtBZ,EAAsBG,SAAS,CAC7BC,WAAY,EACZC,QAAS,CACP5L,QAAS,MACTK,OAAQ,QACRa,OAAQ,GACRf,GAAI,KAGRoL,EAAsBa,YAlED,GAwBIC,cA6C7BnB,EAAiB,IAAIM,EArEI,iCAwEpBN,GAxEoB,uCA6HdoB,GAzCqB,SAACjF,EAAYzB,EAAK2G,EAAsB1B,GAAsB,IAAD,EAC7DrI,qBAD6D,mBACxF2H,EADwF,KAC7EqC,EAD6E,OAE3ChK,oBAAkB,GAFyB,mBAExFiK,EAFwF,KAEpEC,EAFoE,OAI5ClK,mBAAS+J,GAJmC,mBAGxFI,EAHwF,KAGzEC,EAHyE,OAKLpK,qBALK,mBAKxFqK,EALwF,KAKjFC,EALiF,KAM/FnK,qBAAU,WACR,GAAKgK,EAAL,EAGuB,0BAAA7B,EAAAC,OAAA,uDACjBZ,IACFA,EAAUgC,cACVhC,EAAUiC,SAHS,WAAAtB,EAAA,MAKQF,GAAqBhF,EAAKyB,EAAYsF,EAAe9B,IAL7D,cAKfK,EALe,yBAMdA,EAAeO,UAAUxK,MAAK,WACnCyL,GAAsB,GACtBF,EAAatB,MACZ6B,OAAM,SAACC,GAGR,MAFA9B,EAAeiB,cACfjB,EAAekB,QACTY,MAZa,sCAgBvBC,GACGF,OAAM,SAACC,GACNN,GAAsB,GACtBF,OAAa3G,GACbiH,EAASE,SAGZ,CAACL,EAAe/G,EAAKyB,EAAYwD,IAKpC,MAAO,CAACV,EAJyB,SAAOtD,GAAP,SAAAiE,EAAAC,OAAA,gDAC/B2B,GAAsB,GACtBE,EAAiB/F,GAFc,sCAIYgG,EAAOJ,I,qBCrEvCS,GA5DyB,SAACpO,GAAW,IAAD,EACrB0D,qBADqB,mBAC1CD,EAD0C,KAClCiB,EADkC,KAEjDlB,EAAiBC,GACjB,IAAMkB,EAAaC,MACnBf,qBAAU,WACJJ,GACFA,EAAOoB,WAER,CAACF,EAAYlB,IAEhBI,qBAAU,WACR,GAAKJ,EAAL,CAGA,IACMwB,EAAc,qBADF,8BACE,YAA8BC,KAAKC,SAAnC,SACdC,EAAWpB,MAAWqB,MAAMJ,GAC5BK,EAAQtB,SAAcuB,YAAYvF,EAAMiD,OAAS,GAAI,OAAQmC,GACnE3B,EAAO+B,SAASF,GAEhBG,yBAAeL,EAASM,WAAY1F,EAAMiB,OAAQ+C,MAGjD,CAAChE,EAAMiB,OAAQwC,IAYlB,OACE,oCACE,yBAAK+E,MAAO,CAAE2B,UAAW,MAAO5J,WAAY,WAC5C,kBAAC,IAAD,CACEoF,OAAO,MACPC,MAAM,OACN3C,MAAOjD,EAAMiD,MACb4C,eAjBN,SAA8BC,EAAQC,GACpCrB,EAAUqB,IAiBNC,cAAe,CACbC,QAAS,CACPC,SAAS,GAEXmI,YAAa,MACbC,aAAa,EACbC,SAAS,EACTpI,iBAAiB,EACjBC,sBAAsB,GAExBC,SAAS,OACTC,SAzBe,SAACC,EAAStD,GACzBjD,EAAMsG,UACRtG,EAAMsG,SAASrD,QCHfuL,GAAyBC,aAAqB,+BAE9CC,GAAkC,CACtC,CACE/N,KAAM,OACNmB,KAAM,OACNb,OAAQ,CACNN,KAAM,SACNe,WAAY,CACViN,QAAS,CACPC,kBAAmB,CACjB,GAAI,CACFjO,KAAM,YAIZkO,YAAa,CACXlO,KAAM,SACNQ,KAAM,CACJ,OACA,cACA,aAINyB,SAAU,CACR,CACE+L,QAAS,OAMjB,CACEhO,KAAM,YACNmB,KAAM,aAER,CACEnB,KAAM,oBACNmB,KAAM,qBAER,CACEnB,KAAM,oBACNmB,KAAM,sBAIJgN,GAAc,SAACf,EAA2B1M,GAE9C,GADgB0M,aAAiBgB,OAI5BhB,EAAL,CAGA,IAAMiB,EAAqB,CACzB9N,QAAS,MACTG,MAGF,OAAI0M,EAAMd,gBAAgB8B,MACjB,eACFC,EADL,CAEEjB,MAAO,CACLkB,KAAMlB,EAAMd,KAAKgC,KACjBC,QAASnB,EAAMd,KAAKiC,QACpBjC,KAAMc,EAAMd,KAAKA,QAIhB,eACF+B,EADL,CAEEjB,MAAO,CACLkB,KAAMlB,EAAMkB,KACZC,QAASnB,EAAMmB,QACfjC,KAAMc,EAAMd,UAgBZzG,GAAe,CACnBtF,QAAS,MACTK,OAAQ,GACRa,OAAQ,GACRf,GAAI,GAyiBS8N,GAtiBqB,SAACnP,GAAW,IAAD,EAazCyG,GACF,CACE,CACE3E,KAAM9B,EAAM8M,QAAU9M,EAAM8M,QAAQvL,OAAS,UAC7CsF,QAAS7G,EAAM8M,SAAN,eAAsBtG,IAC/BQ,KAAM,GACNF,IAAK9G,EAAM8G,KAAO,GAClBrF,gBAAiBzB,EAAMyB,mBAlB3B8F,EAF2C,EAE3CA,cACAG,EAH2C,EAG3CA,cACAd,EAJ2C,EAI3CA,YACAK,EAL2C,EAK3CA,KACAC,EAN2C,EAM3CA,QACAU,EAP2C,EAO3CA,YACAjB,EAR2C,EAQ3CA,SACAyB,EAT2C,EAS3CA,sBACAF,EAV2C,EAU3CA,UACAF,EAX2C,EAW3CA,kBACAG,EAZ2C,EAY3CA,WAZ2C,EAwBCzE,mBAAS1D,EAAMyB,iBAxBhB,mBAwBtCA,EAxBsC,KAwBrB2N,EAxBqB,OAyBrB1L,mBAAS1D,EAAM8M,SAAW,CAChD5L,QAAS,MACTK,OAAQ,GACRa,OAAQ,GACRf,GAAI,IA7BuC,mBAyBtCgO,EAzBsC,KAyBhCC,EAzBgC,OA+BHd,IAAuB,WAC/D,OAAIxO,EAAMuP,gBACF,GAAN,OAAWb,GAAX,CAA8B1O,EAAMuP,kBAE/Bb,MAnCoC,mBA+BtCc,EA/BsC,KA+BvBC,EA/BuB,OAqCvB/L,mBAAS1D,EAAM8G,KAAO,IArCC,mBAqCtCA,EArCsC,KAqCjC4I,EArCiC,OAsCtBC,aAAY7I,EAAK,KAAjC8I,EAtCsC,uBAuCKlM,mBAAS1D,EAAMuP,iBAAmBb,GAAkB,IAvCzD,qBAuCtCpG,GAvCsC,MAuCnBuH,GAvCmB,SAwCGnM,qBAxCH,qBAwCtCqI,GAxCsC,MAwCpB+D,GAxCoB,SAyCTH,aAAY5D,GAAkB,KAA3DgE,GAzCsC,wBA0CEvC,GAC7CgC,EACAI,EACA5P,EAAMuP,iBAAmBb,GAAkB,GAC3CqB,IA9C2C,qBA0CtC1E,GA1CsC,MA0C3BqC,GA1C2B,MA0CXsC,GA1CW,SAgDPtM,oBAAS,GAhDF,qBAgDtCuM,GAhDsC,MAgDzBC,GAhDyB,SAiDuBxM,mBAAS,IAjDhC,qBAiDtCyM,GAjDsC,MAiDtBC,GAjDsB,SAkDW1M,mBAAS,GAlDpB,qBAkDtC2M,GAlDsC,MAkDhBC,GAlDgB,SAmDrB5M,mBAAuB,IAnDF,qBAmDtCsD,GAnDsC,MAmDhCuJ,GAnDgC,MAoD7C1M,qBAAU,WACRqD,EAAQ,GAAD,mBACFD,GADE,CAEL,CACEnF,KAAM9B,EAAM8M,SAAU9M,EAAM8M,QAAQvL,QAAsB,UAC1DsF,QAAS7G,EAAM8M,QACfhG,IAAK9G,EAAM8G,IACXrF,sBAGJmF,EAAYK,EAAKxE,UAEhB,CAACzC,EAAM8M,UAEVjJ,qBAAU,WACR,QAA0BkD,IAAtBuB,GAAiC,CACnCoF,GAAapF,IACb,IAAMkI,EAAmBlI,QACRvB,IAAbyJ,EAAEvP,SAAqC,IAAbuP,EAAEvP,SAAgC,IAAbuP,EAAEvP,QACnD6O,GAAqBU,EAAEvP,OAAO2B,SAA6B,OAI9D,CAAC0F,KAEJzE,qBAAU,WACJwL,GACF9H,EAAcZ,EAAU0I,KAGzB,CAACA,IAEJxL,qBAAU,WACR,GAAI7D,EAAMqL,UAAW,CACnB,IAAMtD,EAAIyH,EACPrD,MAAK,SAACsE,GAAD,eAAoB,UAAAA,EAAG3O,YAAH,eAAS4O,kBAAT,UAA2B1Q,EAAMqL,iBAAjC,aAA2B,EAAiBqF,kBACpE3I,GACF8H,GAAqB9H,MAIxB,CAAC/H,EAAMqL,YAEVxH,qBAAU,WACJ7D,EAAM8G,MACR4I,EAAO1P,EAAM8G,KACboB,EAAUvB,EAAU3G,EAAM8G,QAG3B,CAAC9G,EAAM8G,MAEV,IAAM6J,GAAmB,gDAAA3E,EAAAC,OAAA,mDACnB2E,EAAmB,IAAIC,MACvBxF,GAFmB,iCAInBuF,EAAmB,IAAIC,KAJJ,WAAA7E,EAAA,MAKEX,GAAUuB,SAAS,CACtCC,WAAYwC,EAAKhO,GACjByL,QAASuC,KAPQ,OAKbyB,EALa,OASbC,EAAoB,IAAIF,KACxBG,EAAI,CAAE9P,QAAS,MAAO4P,SAAQzP,GAAIgO,EAAKhO,IACvC4P,EAAqB,CACzBtQ,KAAM,UACNY,OAAQ8N,EAAK9N,OACb2P,UAAWN,EACXO,QAAS9B,GAEL+B,EAAqB,CACzBzQ,KAAM,WACNY,OAAQ8N,EAAK9N,OACb2P,UAAWH,EACXI,QAASH,GAELK,EAvBa,sBAuBSlB,IAvBT,gBAuB8BlJ,EAAKN,MACtDyJ,GAAkBiB,GAClBd,IAAQ,SAACe,GAAD,4BAAkBA,GAAlB,CAA4BL,EAAQG,OAC5CjJ,EAAWxB,EAAD,sBAAgBM,EAAKN,GAAUK,MAAQ,IAAvC,CAA4CiK,EAAQG,KA1B3C,kDA4BbL,EAAoB,IAAIF,KACxBU,EAAiBzC,GAAY,EAAD,GAAIO,EAAKhO,IACrC4P,EAAqB,CACzBtQ,KAAM,UACNY,OAAQ8N,EAAK9N,OACb2P,UAAWN,EACXO,QAAS9B,GAEL+B,EAAqB,CACzBzQ,KAAM,WACNY,OAAQ8N,EAAK9N,OACb2P,UAAWH,EACXI,QAASI,GAELF,EA1Ca,sBA0CSlB,IA1CT,gBA0C8BlJ,EAAKN,MACtDyJ,GAAkBiB,GAClBd,IAAQ,SAACe,GAAD,4BAAkBA,GAAlB,CAA4BL,EAAQG,OAC5CjJ,EAAWxB,EAAD,sBAAgBM,EAAKN,GAAUK,MAAQ,IAAvC,CAA4CiK,EAAQG,KA7C3C,0DA8GzBvN,qBAAU,WACH7D,EAAMyB,iBACT2N,OAAmBrI,GAhDQ,qBAAAiF,EAAAC,OAAA,2EAAAD,EAAA,aAEXX,SAFW,IAEXA,QAFW,EAEXA,GAAWuB,SAAS,CAClCC,WAAY,OACZC,QAAS,CACP5L,QAAS,MACTkB,OAAQ,GACRf,GAAI,OACJE,OAAQ,mBARe,cAErBiQ,EAFqB,kBAAAxF,EAAA,MAWTyF,gCAAqBD,IAXZ,OAWrBE,EAXqB,OAY3BtC,EAAmBsC,GACnBtJ,EAAsBzB,EAAU+K,GAbL,kDAetB1R,EAAMyB,kBACT2N,OAAmBrI,GACnBqB,EAAsBzB,OAAUI,IAjBP,QAoBzBsE,KACFA,GAAU2B,UAAU,gBAAgB,SAAC2E,GACnC,IAAMZ,EAAoB,IAAIF,KACxBe,EAA8B,CAClCjR,KAAM,WACNgR,cAAc,EACdpQ,OAAQoQ,EAAapQ,OACrB2P,UAAWH,EACXI,QAASQ,GAEXpB,IAAQ,SAACe,GAAD,4BAAkBA,GAAlB,CAA4BM,OACpCzJ,EAAWxB,EAAD,sBAAgBM,EAAKN,GAAUK,MAAQ,IAAvC,CAA4C4K,QAExDvG,GAAU2B,UAAU,SAAS,SAACe,GAC5B,IACM6D,EAA8B,CAClCjR,KAAM,WACNY,OAAQ,GACR2P,UAJwB,IAAIL,KAK5BM,QAASrC,GAAYf,EAAO,OAE9BwC,IAAQ,SAACe,GAAD,4BAAkBA,GAAlB,CAA4BM,OACpCzJ,EAAWxB,EAAD,sBAAgBM,EAAKN,GAAUK,MAAQ,IAAvC,CAA4C4K,SA1C7B,yDAkD7BC,KAEC,CAACxG,GAAW1E,IAEf9C,qBAAU,WACJoD,EAAKN,KACP2I,EAAQrI,EAAKN,GAAUE,SACvB6I,EAAOzI,EAAKN,GAAUG,KAAO,IAC7ByJ,GAAQtJ,EAAKN,GAAUK,MAAQ,OAGhC,CAACL,IAEJ9C,qBAAU,WACRuL,EAAmBpP,EAAMyB,iBACzB2G,EAAsBzB,EAAU3G,EAAMyB,mBAErC,CAACzB,EAAMyB,kBAEVoC,qBAAU,WACHoM,IACHU,OAGD,CAACV,KAuBJ,OACE,oCACE,kBAAC3G,EAAA,EAAD,CAAQC,QAAS,kBAAM2G,IAAe,IAAQ1G,kBAAgB,sBAAsBC,KAAMwG,IACxF,kBAACvG,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,gBACRC,WAAW,SACXvB,MAAO,CAAEwB,QAAS,OAAQC,WAAY,OAAQC,cAAe,SAC7D,kBAACE,EAAA,EAAD,CAAYpJ,MAAM,eAAlB,WAE4B,IAA1BmP,GAAe1N,OACX,KACA,kBAACqP,EAAA,EAAD,CAAS9M,MAAM,OACf,kBAAC+M,EAAA,EAAD,CAAY/G,QA/BD,WACrBmF,GAAeE,MACjBf,EAAQa,GAAeE,IAAsBxJ,SAC7C6I,EAAOS,GAAeE,IAAsBvJ,KAC5CsI,EAAmBe,GAAeE,IAAsB5O,iBACxDyO,IAAe,MA2BD,kBAAC,IAAD,SAMkB,IAA1BC,GAAe1N,OACX,kBAAC2H,EAAA,EAAD,CAAY5B,MAAO,CAAEwB,QAAS,SAA9B,mBACA,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACrB,MAAO,CAAE0B,cAAe,SACxC,kBAAC8H,GAAA,EAAD,CAAMxJ,MAAO,CAAEwB,QAAS,OAAQiI,UAAW,SAAUtM,OAAQ,QAASC,MAAO,UAC1EuK,GAAevO,KAAI,SAACsQ,EAAyBC,GAA1B,OAClB,kBAACC,GAAA,EAAD,CAAUC,QAAM,EACdrH,QAAS,kBAAMsF,GAAwB6B,IACvCG,SAAUH,IAAiB9B,IAC3B,kBAACkC,GAAA,EAAD,CACEC,QAASN,EAAmBrL,QAAQtF,QAAU,eAC9CkR,UAAWP,EAAmBpL,KAAO,mBAK7C,kBAAC,IAAD,CACElB,MAAM,QACND,OAAO,QACP1C,MACEkN,GAAeE,IACXqC,KAAKC,UAAUxC,GAAeE,IAAsBxJ,QAAS,KAAM,GACnE,GAENR,SAAS,OACTR,eAAgB,kBAS5B,yBAAK2C,MAAO,CAAEtI,SAAU,aACtB,kBAAC0S,GAAA,EAAD,CACEpK,MAAO,CAAEjI,WAAY,eACrB0C,MAAO0D,EACP0D,QAAQ,aACRwI,eAAe,UACfvM,SAjFqB,SAACuB,EAA8BiL,GAC1DlM,EAAYkM,KAkFL7L,EAAKrF,KAAI,SAACwF,EAAKU,GAAN,OACR,kBAACiL,GAAA,EAAD,CAAKC,eAAa,EAACxK,MAAO,CACxByK,OAAQ,OACRC,QAAS,OACTC,WAAY,QACXC,cAAe,kBAAM1L,EAAcN,GAAK,IAAOtE,MAChD,yBAAK0F,MAAO,CAAE2K,WAAY,SACvB/L,EAAIO,QACD,kBAAC+C,GAAA,EAAD,CACAzH,MAAOmE,EAAItF,KACXwE,SAAU,SAACC,GAAD,OAAQyB,EAAkBzB,EAAIa,IACxCiM,OAAQ,kBAAM3L,EAAcN,GAAK,IACjCkM,WAAS,EACT9K,MAAO,CAAEmB,SAAU,OAAQmB,YAAa,UAExC,kBAACV,EAAA,EAAD,CAAY5B,MAAO,CAAEoC,QAAS,SAAU2I,cAAe,OAAQzI,YAAa,QAAUT,QAAQ,SAAUjD,EAAItF,MAE/G6E,IAAamB,EAEZ,kBAACgK,EAAA,EAAD,CAAS9M,MAAM,aACb,kBAAC+M,EAAA,EAAD,CAAY/G,QACV,SAACzE,GAAD,OAAQqB,EAAYrB,EAAIuB,IACxBU,MAAO,CAAEtI,SAAU,WAAYsT,MAAO,OAAQC,IAAK,OAASC,KAAK,SACjE,kBAAC,IAAD,QAGF,WAKV,kBAACX,GAAA,EAAD,CAAKC,eAAa,EAACxK,MAAO,CAAEmL,SAAU,QAAU7Q,MAC9C,kBAACgP,EAAA,EAAD,CAAS9M,MAAM,kBACb,kBAAC+M,EAAA,EAAD,CAAY/G,QAAS,kBAAM9D,EAAQ,GAAD,mBAC7BD,GAD6B,CAEhC,CACEnF,KAAM,UACN+E,QAAQ,eAAML,GAAP,CAAqBnF,GAAI,IAChC2F,KAAM,GACNvF,kBACAqF,YAIF,kBAAC,IAAD,CAAU8M,MAAO,WAO3B,kBAACC,GAAA,EAAD,CAAQzT,UAAW,EAAGF,SAAS,SAASsI,MAAO,CAAEsL,OAAQ,IACvD,kBAACC,GAAA,EAAD,KACE,yBACEpO,OAAO,KACPqO,IAAI,eACJxL,MAAO,CAAEsC,YAAa,QACtBmJ,IAAI,sHAEN,kBAAC7J,EAAA,EAAD,CAAYC,QAAQ,KAAKrJ,MAAM,iBAA/B,aACA,kBAAC,GAAD,CACEuH,WAAYiH,EACZ/G,eAAgB,SAACyL,GACfzE,EAAiB,GAAD,mBACXD,GADW,CAEd0E,MAGJ5L,kBAAmBA,GACnBhC,SAAU,SAAC6N,GAAD,OAAsBtE,GAAqBsE,IACrD3L,MAAO,CACLmD,WAAY,UAGhB,kBAACmG,EAAA,EAAD,CAAS9M,MAAM,QACb,kBAAC+M,EAAA,EAAD,CAAY/G,QAAS2F,IACnB,kBAAC,IAAD,CAAYyD,SAAS,YAGzB,kBAAC1J,GAAA,EAAD,CACE2J,eACE,oCACE,kBAACvC,EAAA,EAAD,CAAS9M,MAAOgL,GAAY,YAAc,iBACvCA,GACG,kBAAC,IAAD,CAASxH,MAAO,CAAExH,MAAOsT,KAAM,QAC/B,kBAAC,IAAD,CAAUtT,MAAM,WAIpBS,EAEE,kBAACqQ,EAAA,EAAD,CAAS9M,MACP,yBAAKwD,MAAO,CAAE+L,UAAW,WACvB,kBAACnK,EAAA,EAAD,kCACA,kBAACA,EAAA,EAAD,CAAYC,QAAQ,WAApB,yJAMFW,QAAS,kBAAMwJ,OAAO/K,KAAK,yDAC3B,kBAAC,IAAD,CAAcjB,MAAO,CAAExH,MAAOsT,KAAM,KAAMxJ,YAAa,MAAO2J,OAAQ,WAAab,MAAO,MAE1F,MAIV3Q,MAAO6D,EACP6D,YAAY,8BACZrE,SACE,SAACuB,GACC6H,EAAO7H,EAAMI,OAAOhF,OACpBiF,EAAUvB,EAAUkB,EAAMI,OAAOhF,QAGrCyR,WAAS,EACTlM,MAAO,CAAEjI,WAAY,kBAAmBsK,aAAc,MAAOb,QAAS,WAAYc,YAAa,SAEjG,kBAACgH,EAAA,EAAD,CAAS9M,MAAM,WACb,kBAAC+M,EAAA,EAAD,CAAY/G,QAAS,kBAAMkF,IAAe,KACxC,kBAAC,IAAD,QAIFlQ,EAAM2U,gBACF,KAEF,kBAAC7C,EAAA,EAAD,CAAS9M,MAAM,gBACb,kBAAC+M,EAAA,EAAD,CAAY/G,QApSG,WACvBhL,EAAM4U,kBACR5U,EAAM4U,qBAmSO5U,EAAM6U,SAAW,kBAAC,KAAD,MAAsB,kBAAC,KAAD,UAMpD,kBAAC,IAAD,CACEC,MAAM,WACNC,QAAS,IACTC,SAAU,IACVC,YAAa,MACbC,WAAY,CAAEvP,OAAQ,OAAQC,MAAO,OAAQuP,SAAU,QACvD3M,MAAO,CAAE4M,SAAU,EAAGzP,OAAQ,uBAC9B,kBAAC,IAAD,CACEmP,MAAM,aACNC,QAAS,IACTC,SAAU,IACVC,YAAc3M,GAAoCrH,OAAS,MAAQ,OACnEiU,WAAY,CAAEvP,OAAQ,OAAQC,MAAO,OAAQuP,SAAU,QACvD3M,MAAO,CAAE4M,SAAU,EAAGzP,OAAQ,uBAC9B,kBAAC,EAAD,CACEW,SAAU,SAAC+O,GACT,IAAIC,EACJ,IACEA,EAAa5C,KAAKrN,MAAMgQ,GACxB,MAAOnH,GACPqH,QAAQxH,MAAMG,GAEZoH,IACFhG,EAAQgG,GACR/N,EAAcZ,EAAU2O,KAG5B7T,gBAAiBA,EACjBwB,MAAOyP,KAAKC,UAAUtD,EAAM,KAAM,KAElC/G,GAAoCrH,QAAU,kBAAC,GAAD,CAC9CA,OAASqH,GAAoCrH,OAC7CgC,MAAOyP,KAAKC,UAAU5G,GAAkB,KAAM,GAC9CzF,SA9O2B,SAACkP,GACpC,IACE1F,GAAoB4C,KAAKrN,MAAMmQ,IAC/B,MAAOtH,SA+OL,oCACGlH,GAAKvE,OAAS,GACb,kBAACsI,GAAA,EAAD,CACEV,QAAQ,YACR7B,MAAO,CACLiM,OAAQ,UACRvU,SAAU,WACVuT,IAAK,MACLD,MAAO,OACPM,OAAQ,EACRvT,WAAY,yBAEdyK,QAhWc,WAJxBuF,GAAQ,IACRpI,EAAWxB,EAAU,MAyVb,SAce,IAAhBK,GAAKvE,QACJ,kBAACiH,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAStB,MAAO,CAAEyB,WAAY,SACpD,kBAACG,EAAA,EAAD,CAAYE,cAAY,GAAxB,kDACA,kBAACF,EAAA,EAAD,eAEE,kBAACW,GAAA,EAAD,CACE0K,UAAW,kBAAC,IAAD,MACXpL,QAAQ,YACRqB,UAAQ,EACRgI,KAAK,QACLlL,MAAO,CAAEsC,YAAa,QALxB,gBAFF,qCAgBW,IAAhB9D,GAAKvE,QACJ,yBAAK+F,MAAO,CAAE7C,OAAQ,SACpB,kBAAC,KAAD,CACE+P,aAAa,EACbjU,gBAAiBA,EACjBuF,KAAMA,GACN2O,aAAc,QACdC,mBAAmB,S,UChpBpBC,GAvBQ,SAACC,GACtB,IADyC,EAmBzBpS,mBAjBPqS,SAASvB,OAAOwB,SAASC,OAAQ,CACtCC,mBAAmB,EACnBJ,MAAOA,GAAS,IAChBK,QAHsC,SAG9BC,GACN,MAAI,sBAAsBC,KAAKD,GACtBE,SAASF,EAAK,IAEX,UAARA,IAGQ,SAARA,GAGGG,mBAAmBH,QAKhC,MAAO,CApBkC,sBCiC5BI,GA1BO,WACpB,IAAM3B,EAAW4B,oBADS,EAEVZ,KAATa,EAFmB,oBAGpBC,EAAQ9B,EAAS5R,MAAQvC,EAAYZ,EAM3C,OALA+D,qBAAU,WACR,IAAMkE,EAAI8M,EAAS5R,MAAQ,UAAY,KACvCe,SAAc4S,SAAS7O,KACtB,CAAC8M,EAAS5R,QAGX,kBAAC,IAAD,CAAkB0T,MAAOA,GACvB,kBAACE,EAAA,EAAD,MAEA,kBAAC,GAAD,CACEjC,iBAAkBC,EAASiC,OAC3BjC,SAAUA,EAAS5R,MACnBsM,gBAAiBmH,EAAMnH,gBACvBlE,UAAWqL,EAAMrL,UACjBvE,IAAK4P,EAAM5P,IACXrF,gBAAiBiV,EAAMjV,gBACvBqL,QAAS4J,EAAM5J,Y,cCxBvBiK,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.faf277c6.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nexport const lightTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"#fff !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  palette: {\n    type: \"dark\",\n    background: {\n      default: grey[900],\n      paper: grey[800],\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: grey[400],\n      },\n    },\n  },\n});\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import { MethodObject, ContentDescriptorObject, OpenrpcDocument, ExampleObject } from \"@open-rpc/meta-schema\";\n\nconst schema: any = {\n  type: \"object\",\n  properties: {\n    jsonrpc: {\n      type: \"string\",\n      enum: [\"2.0\"],\n      description: \"JSON-RPC version string\",\n    },\n    id: {\n      description: \"unique identifier for the JSON-RPC request\",\n      oneOf: [\n        {\n          type: \"string\",\n        },\n        {\n          type: \"number\",\n        },\n      ],\n    },\n    method: {\n      type: \"string\",\n    },\n  },\n};\n\nconst openrpcDocumentToJSONRPCSchema = (openrpcDocument: OpenrpcDocument) => {\n  return {\n    type: \"object\",\n    properties: {\n      id: {\n        ...schema.properties.id,\n      },\n      jsonrpc: {\n        ...schema.properties.jsonrpc,\n      },\n      method: {\n        type: \"string\",\n        oneOf: openrpcDocument && openrpcDocument.methods && openrpcDocument.methods.map((method) => {\n          return {\n            const: method.name,\n            description: method.description || method.summary,\n            markdownDescription: method.description || method.summary,\n          };\n        }),\n      },\n    },\n    allOf: openrpcDocument && openrpcDocument.methods && openrpcDocument.methods.map((method: MethodObject) => {\n      return {\n        if: {\n          properties: {\n            method: {\n              const: method.name,\n            },\n          },\n        },\n        then: {\n          properties: {\n            params: {\n              oneOf: [\n                {\n                  type: \"array\",\n                  minItems: method.params && method.params.filter((param: any) => param.required).length,\n                  maxItems: method.params && method.params.length,\n                  defaultSnippets: method.examples ? method.examples.map((example: any) => {\n                    return {\n                      label: example.name,\n                      description: example.description || example.summary,\n                      body: example.params && example.params.map((ex: ExampleObject) => ex.value),\n                    };\n                  }) : [],\n                  items: method.params && method.params.map((param: any) => {\n                    return {\n                      ...param.schema,\n                      markdownDescription: param.description || param.summary,\n                      description: param.description || param.summary,\n                      additionalProperties: false,\n                    };\n                  }),\n                },\n                {\n                  type: \"object\",\n                  properties: method.params && (method.params as ContentDescriptorObject[])\n                    .reduce((memo: any, param: ContentDescriptorObject) => {\n                      if (typeof param.schema === \"object\") {\n                        memo[param.name] = {\n                          ...param.schema,\n                          markdownDescription: param.description || param.summary,\n                          description: param.description || param.summary,\n                          additionalProperties: false,\n                        };\n                      } else {\n                        memo[param.name] = param.schema;\n                      }\n                      return memo;\n                    }, {}),\n                },\n              ],\n            },\n          },\n        },\n      };\n    }),\n  };\n};\n\nexport default openrpcDocumentToJSONRPCSchema;\n","import { useState, useEffect, Dispatch } from \"react\";\nimport * as monaco from \"monaco-editor\";\nconst { initVimMode } = require(\"monaco-vim\"); //tslint:disable-line\n\n// Vim Mode:\n// Press Chord Ctrl-K, Ctrl-V => the action will run if it is enabled\nconst useMonacoVimMode = (editor: monaco.editor.IStandaloneCodeEditor | undefined) => {\n  const [vimMode, setVimMode]: [any, Dispatch<any>] = useState();\n\n  useEffect(() => {\n    if (!editor) { return; }\n\n    editor.addAction({\n      id: \"vim-mode\",\n      label: \"Vim Mode\",\n      keybindings: [\n        monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_V), //tslint:disable-line\n      ],\n      contextMenuGroupId: \"navigation\",\n      contextMenuOrder: 1.5,\n      run: () => {\n        if (vimMode) {\n          vimMode.dispose();\n        }\n        setVimMode(initVimMode(editor));\n      },\n    });\n\n    return () => {\n      if (vimMode) {\n        vimMode.dispose();\n      }\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor]);\n\n  return [editor, vimMode];\n};\n\nexport default useMonacoVimMode;\n","import React, { useEffect, useState } from \"react\";\nimport MonacoEditor from \"@etclabscore/react-monaco-editor\";\nimport * as monaco from \"monaco-editor\";\nimport { MethodObject, OpenrpcDocument } from \"@open-rpc/meta-schema\";\nimport useWindowSize from \"@rehooks/window-size\";\nimport { addDiagnostics } from \"@etclabscore/monaco-add-json-schema-diagnostics\";\nimport openrpcDocumentToJSONRPCSchema from \"../helpers/openrpcDocumentToJSONRPCSchema\";\nimport useMonacoVimMode from \"../hooks/useMonacoVimMode\";\n\ninterface IProps {\n  onChange?: (newValue: any) => void;\n  openrpcMethodObject?: MethodObject;\n  openrpcDocument?: OpenrpcDocument;\n  value: any;\n}\n\nconst JSONRPCRequestEditor: React.FC<IProps> = (props) => {\n  const [editor, setEditor] = useState();\n  useMonacoVimMode(editor);\n  const windowSize = useWindowSize();\n  useEffect(() => {\n    if (editor) {\n      editor.layout();\n    }\n  }, [windowSize, editor]);\n\n  useEffect(() => {\n    if (!editor) {\n      return;\n    }\n    const modelName = (props.openrpcDocument && props.openrpcDocument.info) ? props.openrpcDocument.info.title : \"inspector\";\n    const modelUriString = `inmemory://${modelName}-${Math.random()}.json`;\n    const modelUri = monaco.Uri.parse(modelUriString);\n    const model = monaco.editor.createModel(props.value || \"\", \"json\", modelUri);\n    editor.setModel(model);\n    let schema: any = {\n      type: \"object\",\n      properties: {\n        jsonrpc: {\n          type: \"string\",\n          const: \"2.0\",\n        },\n        id: {\n          oneOf: [\n            {\n              type: \"string\",\n            },\n            {\n              type: \"number\",\n            },\n          ],\n        },\n        method: {\n          type: \"string\",\n        },\n      },\n    };\n\n    if (props.openrpcDocument) {\n      schema = openrpcDocumentToJSONRPCSchema(props.openrpcDocument);\n    } else {\n      schema = {\n        additionalProperties: false,\n        properties: {\n          ...schema.properties,\n          params: {\n            oneOf: [\n              { type: \"array\" },\n              { type: \"object\" },\n            ],\n          },\n        },\n      };\n    }\n    addDiagnostics(modelUri.toString(), schema, monaco);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.openrpcDocument, editor]);\n\n  function handleEditorDidMount(_: any, ed: any) {\n    setEditor(ed);\n  }\n\n  const handleChange = (ev: any, value: any) => {\n    if (props.onChange) {\n      props.onChange(value);\n    }\n  };\n\n  return (\n    <MonacoEditor\n      height=\"100%\"\n      width=\"100%\"\n      value={props.value}\n      editorDidMount={handleEditorDidMount}\n      editorOptions={{\n        minimap: {\n          enabled: false,\n        },\n        automaticLayout: true,\n        fixedOverflowWidgets: true,\n      }}\n      language=\"json\"\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default JSONRPCRequestEditor;\n","import { useState, Dispatch, useEffect } from \"react\";\nimport { OpenrpcDocument } from \"@open-rpc/meta-schema\";\nimport { JSONRPCLog } from \"@open-rpc/logs-react\";\n\ninterface ITab {\n  name: string;\n  content?: any;\n  logs: JSONRPCLog[];\n  editing?: boolean;\n  url?: string;\n  openrpcDocument?: OpenrpcDocument;\n}\n\nconst emptyJSONRPC = {\n  jsonrpc: \"2.0\",\n  method: \"\",\n  params: [],\n  id: 0,\n};\n\nconst useTabs = (defaultTabs?: ITab[]) => {\n  const [tabIndex, setTabIndex] = useState(0);\n  const [tabs, setTabs]: [ITab[], Dispatch<any>] = useState(\n    defaultTabs || [{ name: \"New Tab\", content: emptyJSONRPC, url: undefined, logs: [] }],\n  );\n\n  const handleClose = (event: React.MouseEvent<{}>, index: number) => {\n    if (tabs.length === 1) {\n      return;\n    }\n    const t = tabs.filter((tab, i) => i !== index);\n    setTabs(t);\n  };\n\n  useEffect(() => {\n    if (tabs.length === tabIndex) {\n      setTabIndex(tabIndex - 1);\n    }\n  }, [tabs, tabIndex]);\n\n  const setTabName = (tab: ITab, name: string) => {\n    const newTabs = tabs.map((innerTab) => {\n      if (innerTab === tab) {\n        return {\n          ...innerTab,\n          name,\n        };\n      }\n      return innerTab;\n    });\n    setTabs(newTabs);\n  };\n\n  const setTabEditing = (tab: ITab, editing: boolean) => {\n    const newTabs = tabs.map((innerTab) => {\n      if (innerTab === tab) {\n        return {\n          ...innerTab,\n          editing,\n        };\n      }\n      return innerTab;\n    });\n    setTabs(newTabs);\n  };\n\n  const setTabOpenRPCDocument = (ti: number, openrpcDocument: OpenrpcDocument | undefined) => {\n    const newTabs = tabs.map((innerTab, i) => {\n      if (i === ti) {\n        if (!openrpcDocument) {\n          return {\n            name: innerTab.name,\n            content: innerTab.content,\n            logs: innerTab.logs,\n            editing: innerTab.editing,\n            url: innerTab.url,\n          };\n        }\n        return {\n          ...innerTab,\n          openrpcDocument,\n        };\n      }\n      return innerTab;\n    });\n    setTabs(newTabs);\n  };\n\n  const setTabUrl = (ti: number, url: string) => {\n    const newTabs = tabs.map((innerTab, i) => {\n      if (i === ti) {\n        return {\n          ...innerTab,\n          url,\n        };\n      }\n      return innerTab;\n    });\n    setTabs(newTabs);\n  };\n\n  const setTabLogs = (ti: number, logs: JSONRPCLog[]) => {\n    const newTabs = tabs.map((innerTab, i) => {\n      if (i === ti) {\n        return {\n          ...innerTab,\n          logs,\n        };\n      }\n      return innerTab;\n    });\n    setTabs(newTabs);\n  };\n\n  const setTabContent = (ti: number, content: any) => {\n    const newTabs = tabs.map((innerTab, i) => {\n      if (i === ti) {\n        return {\n          ...innerTab,\n          content,\n        };\n      }\n      return innerTab;\n    });\n    setTabs(newTabs);\n  };\n\n  const handleLabelChange = (ev: any, tab: ITab) => {\n    setTabName(tab, ev.target.value);\n  };\n  return {\n    setTabContent,\n    setTabEditing,\n    setTabIndex,\n    setTabName,\n    tabs,\n    setTabs,\n    handleClose,\n    tabIndex,\n    handleLabelChange,\n    setTabUrl,\n    setTabLogs,\n    setTabOpenRPCDocument,\n  };\n};\n\nexport default useTabs;\n","import React, { useState, ChangeEvent } from \"react\";\nimport { Button, Menu, MenuItem, Typography, Dialog, Container, Grid, InputBase } from \"@material-ui/core\";\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\nimport PlusIcon from \"@material-ui/icons/Add\";\nimport DropdownArrowIcon from \"@material-ui/icons/ArrowDropDown\";\nimport { ITransport } from \"../hooks/useTransport\";\n\ninterface IProps {\n  transports: ITransport[];\n  selectedTransport: ITransport;\n  onChange: (changedTransport: ITransport) => void;\n  onAddTransport: (addedTransport: ITransport) => void;\n  style?: CSSProperties;\n}\n\nconst TransportDropdown: React.FC<IProps> = ({ selectedTransport, transports, onChange, style, onAddTransport }) => {\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleMenuItemClick = (transport: ITransport) => {\n    setAnchorEl(null);\n    // this forces language change for react + i18n react\n    onChange(transport);\n  };\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false);\n\n  const [selectedCustomTransport, setSelectedCustomTransport] = useState<ITransport | undefined>();\n  const [customTransportName, setCustomTransportName] = useState<string | undefined>();\n  const [customTransportUri, setCustomTransportUri] = useState<string | undefined>();\n\n  const [dialogMenuAnchorEl, setDialogMenuAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleDialogAnchorClose = () => {\n    setDialogMenuAnchorEl(null);\n  };\n  const handleDialogCustomTransportClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setDialogMenuAnchorEl(event.currentTarget);\n  };\n\n  const handleCustomTransportDialogMenuItemClick = (transport: ITransport) => {\n    setDialogMenuAnchorEl(null);\n    setSelectedCustomTransport(transport);\n  };\n\n  const handleSubmitCustomTransport = () => {\n    setDialogMenuAnchorEl(null);\n    if (selectedCustomTransport && customTransportName && customTransportUri) {\n      const t: ITransport = {\n        type: \"plugin\",\n        transport: selectedCustomTransport,\n        name: customTransportName,\n        uri: customTransportUri,\n      };\n      onAddTransport(t);\n      setDialogOpen(false);\n    }\n  };\n  return (\n    <div style={style}>\n      <Dialog onClose={() => setDialogOpen(false)} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n        <Container maxWidth=\"sm\">\n          <Grid\n            container\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style={{ padding: \"30px\", paddingTop: \"10px\", paddingBottom: \"10px\", marginTop: \"10px\" }}>\n            <Typography variant=\"h6\">Custom Transport Plugin</Typography>\n            <Typography variant=\"caption\" gutterBottom>\n              Transport plugins are created by implementing the \"connect\",\n              \"sendData\", and \"close\" methods over JSON-RPC.\n             </Typography>\n            <Grid container direction=\"column\" spacing={1}>\n              <Grid item>\n                <InputBase placeholder=\"Plugin Name\"\n                  onChange={\n                    (event: ChangeEvent<HTMLInputElement>) => {\n                      setCustomTransportName(event.target.value);\n                    }\n                  }\n                  style={{\n                    display: \"block\",\n                    background: \"rgba(0,0,0,0.1)\",\n                    borderRadius: \"4px\",\n                    padding: \"0px 10px\",\n                    marginRight: \"5px\",\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <InputBase placeholder=\"Plugin URI\"\n                  onChange={\n                    (event: ChangeEvent<HTMLInputElement>) => {\n                      setCustomTransportUri(event.target.value);\n                    }\n                  }\n                  style={{\n                    display: \"block\",\n                    background: \"rgba(0,0,0,0.1)\",\n                    borderRadius: \"4px\",\n                    padding: \"0px 10px\",\n                    marginRight: \"5px\",\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <Button\n                  variant=\"outlined\"\n                  onClick={handleDialogCustomTransportClick}>\n                  {selectedCustomTransport ? selectedCustomTransport.name : \"Select A Transport\"}\n                </Button>\n              </Grid>\n            </Grid>\n            <Menu\n              id=\"transport-menu\"\n              anchorEl={dialogMenuAnchorEl}\n              keepMounted\n              open={Boolean(dialogMenuAnchorEl)}\n              onClose={handleDialogAnchorClose}\n            >\n              {transports.filter((value) => value.type !== \"plugin\").map((transport, i) => (\n                <MenuItem\n                  onClick={() => handleCustomTransportDialogMenuItemClick(transport)}\n                >{transport.name}</MenuItem>\n              ))}\n            </Menu>\n            <Button\n              style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n              onClick={handleSubmitCustomTransport}\n              disabled={!customTransportName || !customTransportUri || !selectedCustomTransport}\n              variant=\"contained\">\n              Add Transport\n            </Button>\n          </Grid>\n        </Container>\n      </Dialog>\n      <Button\n        style={{\n          marginRight: \"10px\",\n          marginLeft: \"5px\",\n        }}\n        variant=\"outlined\"\n        onClick={handleClick} endIcon={<DropdownArrowIcon />}\n      >{selectedTransport && selectedTransport.name}</Button>\n      <Menu\n        id=\"transport-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {transports.map((transport, i) => (\n          <MenuItem onClick={() => handleMenuItemClick(transport)}>{transport.name}</MenuItem>\n        ))}\n        <MenuItem onClick={() => setDialogOpen(true)}>\n          <PlusIcon style={{ marginRight: \"5px\" }} /><Typography variant=\"caption\">Add Transport</Typography>\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n};\n\nexport default TransportDropdown;\n","\nimport { JSONRPCError } from \"@open-rpc/client-js/build/Error\";\nimport { Dispatch, useEffect, useState } from \"react\";\nimport { HTTPTransport, WebSocketTransport, PostMessageWindowTransport, PostMessageIframeTransport } from \"@open-rpc/client-js\";\nimport { Transport } from \"@open-rpc/client-js/build/transports/Transport\";\nimport { IJSONRPCData, IJSONRPCNotificationResponse } from \"@open-rpc/client-js/build/Request\";\nimport { JSONSchema } from \"@open-rpc/meta-schema\";\n\nexport type TTransport = \"http\" | \"websocket\" | \"postmessagewindow\" | \"postmessageiframe\";\n\nexport interface IWebTransport {\n  type: TTransport;\n  name?: string;\n  schema?: JSONSchema;\n}\n\nexport interface IPluginTransport {\n  type: \"plugin\";\n  uri: string;\n  name: string;\n  transport: ITransport;\n}\nconst getTransportFromType = async (\n  uri: string,\n  transports: ITransport[],\n  transport: ITransport,\n  transportOptions?: any,\n): Promise<Transport> => {\n  let localTransport: any;\n  const localTransportType = transports.find((value) => {\n    return value.type === transport.type && value.name === transport.name;\n  });\n  if (localTransportType?.type === \"websocket\") {\n    localTransport = new WebSocketTransport(uri);\n  } else if (localTransportType?.type === \"http\") {\n    localTransport = new HTTPTransport(uri, transportOptions);\n  } else if (localTransportType?.type === \"postmessageiframe\") {\n    localTransport = new PostMessageIframeTransport(uri);\n  } else if (localTransportType?.type === \"postmessagewindow\") {\n    localTransport = new PostMessageWindowTransport(uri);\n  } else if (localTransportType?.type === \"plugin\") {\n    const intermediateTransport = await getTransportFromType(\n      localTransportType.uri,\n      transports,\n      localTransportType.transport,\n    );\n    class InterTransport extends Transport {\n      public async connect() {\n        await intermediateTransport.connect();\n        const results = await intermediateTransport.sendData({\n          internalID: 0,\n          request: {\n            jsonrpc: \"2.0\",\n            method: \"connect\",\n            params: [uri],\n            id: 0,\n          },\n        });\n        intermediateTransport.subscribe(\"notification\", (data: IJSONRPCNotificationResponse) => {\n          this.transportRequestManager.transportEventChannel.emit(\"notification\", data);\n        });\n        intermediateTransport.subscribe(\"error\", (data: JSONRPCError) => {\n          this.transportRequestManager.transportEventChannel.emit(\"error\", data);\n        });\n        return results;\n      }\n      public sendData(data: IJSONRPCData): Promise<any> {\n        return intermediateTransport.sendData({\n          internalID: 0,\n          request: {\n            jsonrpc: \"2.0\",\n            method: \"sendData\",\n            params: [data.request],\n            id: 0,\n          },\n        });\n      }\n      public close() {\n        intermediateTransport.unsubscribe();\n        intermediateTransport.sendData({\n          internalID: 0,\n          request: {\n            jsonrpc: \"2.0\",\n            method: \"close\",\n            params: [],\n            id: 0,\n          },\n        });\n        intermediateTransport.close();\n      }\n    }\n    localTransport = new InterTransport();\n  }\n\n  return localTransport;\n};\n\nexport type ITransport = IWebTransport | IPluginTransport;\n\ntype TUseTransport = (\n  transports: ITransport[],\n  url: string,\n  defaultTransportType: ITransport,\n  transportOptions?: any,\n) => [Transport | undefined, (t: ITransport) => void, JSONRPCError | undefined, boolean];\n\nconst useTransport: TUseTransport = (transports, url, defaultTransportType, transportOptions) => {\n  const [transport, setTransport] = useState<Transport>();\n  const [transportConnected, setTransportConnected] = useState<boolean>(false);\n  const [transportType, setTransportType]:\n    [ITransport | undefined, Dispatch<ITransport>] = useState(defaultTransportType);\n  const [error, setError]: [JSONRPCError | undefined, Dispatch<JSONRPCError | undefined>] = useState();\n  useEffect(() => {\n    if (!transportType) {\n      return;\n    }\n    const doSetTransport = async () => {\n      if (transport) {\n        transport.unsubscribe();\n        transport.close();\n      }\n      const localTransport = await getTransportFromType(url, transports, transportType, transportOptions);\n      return localTransport.connect().then(() => {\n        setTransportConnected(true);\n        setTransport(localTransport);\n      }).catch((e) => {\n        localTransport.unsubscribe()\n        localTransport.close();\n        throw e;\n      });\n    };\n\n    doSetTransport()\n      .catch((e: JSONRPCError) => {\n        setTransportConnected(false);\n        setTransport(undefined);\n        setError(e);\n      });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [transportType, url, transports, transportOptions]);\n  const setSelectedTransportType = async (t: ITransport) => {\n    setTransportConnected(false);\n    setTransportType(t);\n  };\n  return [transport, setSelectedTransportType, error, transportConnected];\n};\n\nexport default useTransport;\n","import React, { useEffect, useState } from \"react\";\nimport MonacoEditor from \"@etclabscore/react-monaco-editor\";\nimport * as monaco from \"monaco-editor\";\nimport { JSONSchema, MethodObject } from \"@open-rpc/meta-schema\";\nimport useWindowSize from \"@rehooks/window-size\";\nimport { addDiagnostics } from \"@etclabscore/monaco-add-json-schema-diagnostics\";\nimport useMonacoVimMode from \"../hooks/useMonacoVimMode\";\n\ninterface IProps {\n  onChange?: (newValue: any) => void;\n  openrpcMethodObject?: MethodObject;\n  schema?: JSONSchema;\n  value: any;\n}\n\nconst OptionsEditor: React.FC<IProps> = (props) => {\n  const [editor, setEditor] = useState();\n  useMonacoVimMode(editor);\n  const windowSize = useWindowSize();\n  useEffect(() => {\n    if (editor) {\n      editor.layout();\n    }\n  }, [windowSize, editor]);\n\n  useEffect(() => {\n    if (!editor) {\n      return;\n    }\n    const modelName = \"inspector-transport-options\";\n    const modelUriString = `inmemory://${modelName}-${Math.random()}.json`;\n    const modelUri = monaco.Uri.parse(modelUriString);\n    const model = monaco.editor.createModel(props.value || \"\", \"json\", modelUri);\n    editor.setModel(model);\n\n    addDiagnostics(modelUri.toString(), props.schema, monaco);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.schema, editor]);\n\n  function handleEditorDidMount(_: any, ed: any) {\n    setEditor(ed);\n  }\n\n  const handleChange = (ev: any, value: any) => {\n    if (props.onChange) {\n      props.onChange(value);\n    }\n  };\n\n  return (\n    <>\n      <div style={{ marginTop: \"5px\", background: \"black\" }}></div>\n      <MonacoEditor\n        height=\"95%\"\n        width=\"100%\"\n        value={props.value}\n        editorDidMount={handleEditorDidMount}\n        editorOptions={{\n          minimap: {\n            enabled: false,\n          },\n          lineNumbers: \"off\",\n          glyphMargin: false,\n          folding: false,\n          automaticLayout: true,\n          fixedOverflowWidgets: true,\n        }}\n        language=\"json\"\n        onChange={handleChange}\n      />\n    </>\n  );\n};\n\nexport default OptionsEditor;\n","import React, { useState, useEffect, ChangeEvent, Dispatch } from \"react\";\nimport SplitPane from \"react-split-pane\";\nimport JSONRPCRequestEditor from \"./JSONRPCRequestEditor\";\nimport PlayCircle from \"@material-ui/icons/PlayCircleFilled\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport FlashOn from \"@material-ui/icons/FlashOn\";\nimport FlashOff from \"@material-ui/icons/FlashOff\";\nimport History from \"@material-ui/icons/History\";\nimport Keyboard from \"@material-ui/icons/Keyboard\";\nimport MonacoEditor from \"@etclabscore/react-monaco-editor\";\nimport PlusIcon from \"@material-ui/icons/Add\";\nimport DocumentIcon from \"@material-ui/icons/Description\";\nimport {\n  IconButton,\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  InputBase,\n  Tab,\n  Tabs,\n  Tooltip,\n  Grid,\n  Dialog,\n  ListItem,\n  List,\n  ListItemText,\n  Container,\n} from \"@material-ui/core\";\nimport createPersistedState from \"use-persisted-state\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport { JSONRPCError } from \"@open-rpc/client-js/build/Error\";\nimport { OpenrpcDocument, ExampleObject } from \"@open-rpc/meta-schema\";\nimport useTabs from \"../hooks/useTabs\";\nimport { useDebounce } from \"use-debounce\";\nimport { green } from \"@material-ui/core/colors\";\nimport { parseOpenRPCDocument } from \"@open-rpc/schema-utils-js\";\nimport TransportDropdown from \"../components/TransportDropdown\";\nimport useTransport, { ITransport, IWebTransport, TTransport } from \"../hooks/useTransport\";\nimport JSONRPCLogger, { JSONRPCLog } from \"@open-rpc/logs-react\";\nimport OptionsEditor from \"./OptionsEditor\";\n\nconst useCustomTransportList = createPersistedState(\"inspector-custom-transports\");\n\nconst defaultTransports: ITransport[] = [\n  {\n    type: \"http\",\n    name: \"HTTP\",\n    schema: {\n      type: \"object\",\n      properties: {\n        headers: {\n          patternProperties: {\n            \"\": {\n              type: \"string\",\n            },\n          },\n        },\n        credentials: {\n          type: \"string\",\n          enum: [\n            \"omit\",\n            \"same-origin\",\n            \"include\",\n          ],\n        },\n      },\n      examples: [\n        {\n          headers: {\n          },\n        },\n      ],\n    },\n  },\n  {\n    type: \"websocket\",\n    name: \"WebSocket\",\n  },\n  {\n    type: \"postmessagewindow\",\n    name: \"PostMessageWindow\",\n  },\n  {\n    type: \"postmessageiframe\",\n    name: \"PostMessageIframe\",\n  },\n];\n\nconst errorToJSON = (error: JSONRPCError | any, id?: string | number | null): any => {\n  const isError = error instanceof Error;\n  if (!isError) {\n    return;\n  }\n  if (!error) {\n    return;\n  }\n  const emptyErrorResponse = {\n    jsonrpc: \"2.0\",\n    id,\n  };\n  // this is an internal wrapped client-js error\n  if (error.data instanceof Error) {\n    return {\n      ...emptyErrorResponse,\n      error: {\n        code: error.data.code,\n        message: error.data.message,\n        data: error.data.data,\n      },\n    };\n  }\n  return {\n    ...emptyErrorResponse,\n    error: {\n      code: error.code,\n      message: error.message,\n      data: error.data,\n    },\n  };\n};\n\ninterface IProps {\n  url?: string;\n  request?: any;\n  darkMode?: boolean;\n  hideToggleTheme?: boolean;\n  openrpcDocument?: OpenrpcDocument;\n  transport?: TTransport;\n  customTransport?: ITransport;\n  onToggleDarkMode?: () => void;\n}\n\nconst emptyJSONRPC = {\n  jsonrpc: \"2.0\",\n  method: \"\",\n  params: [],\n  id: 0,\n};\n\nconst Inspector: React.FC<IProps> = (props) => {\n  const {\n    setTabContent,\n    setTabEditing,\n    setTabIndex,\n    tabs,\n    setTabs,\n    handleClose,\n    tabIndex,\n    setTabOpenRPCDocument,\n    setTabUrl,\n    handleLabelChange,\n    setTabLogs,\n  } = useTabs(\n    [\n      {\n        name: props.request ? props.request.method : \"New Tab\",\n        content: props.request || { ...emptyJSONRPC },\n        logs: [],\n        url: props.url || \"\",\n        openrpcDocument: props.openrpcDocument,\n      },\n    ],\n  );\n  const [openrpcDocument, setOpenRpcDocument] = useState(props.openrpcDocument);\n  const [json, setJson] = useState(props.request || {\n    jsonrpc: \"2.0\",\n    method: \"\",\n    params: [],\n    id: 0,\n  });\n  const [transportList, setTransportList] = useCustomTransportList(() => {\n    if (props.customTransport) {\n      return [...defaultTransports, props.customTransport];\n    }\n    return defaultTransports;\n  });\n  const [url, setUrl] = useState(props.url || \"\");\n  const [debouncedUrl] = useDebounce(url, 1000);\n  const [selectedTransport, setSelectedTransport] = useState(props.customTransport || defaultTransports[0]);\n  const [transportOptions, setTransportOptions] = useState<any>();\n  const [debouncedtransportOptions] = useDebounce(transportOptions, 1000);\n  const [transport, setTransport, , connected] = useTransport(\n    transportList,\n    debouncedUrl,\n    props.customTransport || defaultTransports[0],\n    debouncedtransportOptions,\n  );\n  const [historyOpen, setHistoryOpen] = useState(false);\n  const [requestHistory, setRequestHistory]: [any[], Dispatch<any>] = useState([]);\n  const [historySelectedIndex, setHistorySelectedIndex] = useState(0);\n  const [logs, setLogs] = useState<JSONRPCLog[]>([]);\n  useEffect(() => {\n    setTabs([\n      ...tabs,\n      {\n        name: props.request ? props.request.method || \"New Tab\" : \"New Tab\",\n        content: props.request,\n        url: props.url,\n        openrpcDocument,\n      },\n    ]);\n    setTabIndex(tabs.length);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.request]);\n\n  useEffect(() => {\n    if (selectedTransport !== undefined) {\n      setTransport(selectedTransport);\n      const s: IWebTransport = selectedTransport as IWebTransport;\n      if (s.schema !== undefined && s.schema !== true && s.schema !== false) {\n        setTransportOptions((s.schema.examples as ExampleObject[])[0]);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedTransport]);\n\n  useEffect(() => {\n    if (json) {\n      setTabContent(tabIndex, json);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [json]);\n\n  useEffect(() => {\n    if (props.transport) {\n      const t = transportList\n        .find((tp: ITransport) => tp.name?.toLowerCase() === props.transport?.toLowerCase());\n      if (t) {\n        setSelectedTransport(t);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.transport]);\n\n  useEffect(() => {\n    if (props.url) {\n      setUrl(props.url);\n      setTabUrl(tabIndex, props.url);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.url]);\n\n  const handlePlayButton = async () => {\n    let requestTimestamp = new Date();\n    if (transport) {\n      try {\n        requestTimestamp = new Date();\n        const result = await transport.sendData({\n          internalID: json.id,\n          request: json,\n        });\n        const responseTimestamp = new Date();\n        const r = { jsonrpc: \"2.0\", result, id: json.id };\n        const reqObj: JSONRPCLog = {\n          type: \"request\",\n          method: json.method,\n          timestamp: requestTimestamp,\n          payload: json,\n        };\n        const resObj: JSONRPCLog = {\n          type: \"response\",\n          method: json.method,\n          timestamp: responseTimestamp,\n          payload: r,\n        };\n        const newHistory: any = [...requestHistory, { ...tabs[tabIndex] }];\n        setRequestHistory(newHistory);\n        setLogs((prevLogs) => [...prevLogs, reqObj, resObj]);\n        setTabLogs(tabIndex, [...(tabs[tabIndex].logs || []), reqObj, resObj]);\n      } catch (e) {\n        const responseTimestamp = new Date();\n        const convertedError = errorToJSON(e, json.id);\n        const reqObj: JSONRPCLog = {\n          type: \"request\",\n          method: json.method,\n          timestamp: requestTimestamp,\n          payload: json,\n        };\n        const resObj: JSONRPCLog = {\n          type: \"response\",\n          method: json.method,\n          timestamp: responseTimestamp,\n          payload: convertedError,\n        };\n        const newHistory: any = [...requestHistory, { ...tabs[tabIndex] }];\n        setRequestHistory(newHistory);\n        setLogs((prevLogs) => [...prevLogs, reqObj, resObj]);\n        setTabLogs(tabIndex, [...(tabs[tabIndex].logs || []), reqObj, resObj]);\n      }\n    }\n  };\n\n  const clear = () => {\n    setLogs([]);\n    setTabLogs(tabIndex, []);\n  };\n\n  const handleClearButton = () => {\n    clear();\n  };\n\n  const handleToggleDarkMode = () => {\n    if (props.onToggleDarkMode) {\n      props.onToggleDarkMode();\n    }\n  };\n  const refreshOpenRpcDocument = async () => {\n    try {\n      const d = await transport?.sendData({\n        internalID: 999999,\n        request: {\n          jsonrpc: \"2.0\",\n          params: [],\n          id: 999999,\n          method: \"rpc.discover\",\n        },\n      });\n      const doc = await parseOpenRPCDocument(d);\n      setOpenRpcDocument(doc);\n      setTabOpenRPCDocument(tabIndex, doc);\n    } catch (e) {\n      if (!props.openrpcDocument) {\n        setOpenRpcDocument(undefined);\n        setTabOpenRPCDocument(tabIndex, undefined);\n      }\n    }\n    if (transport) {\n      transport.subscribe(\"notification\", (notification: any) => {\n        const responseTimestamp = new Date();\n        const notificationObj: JSONRPCLog = {\n          type: \"response\",\n          notification: true,\n          method: notification.method,\n          timestamp: responseTimestamp,\n          payload: notification,\n        };\n        setLogs((prevLogs) => [...prevLogs, notificationObj]);\n        setTabLogs(tabIndex, [...(tabs[tabIndex].logs || []), notificationObj]);\n      });\n      transport.subscribe(\"error\", (error: any) => {\n        const responseTimestamp = new Date();\n        const notificationObj: JSONRPCLog = {\n          type: \"response\",\n          method: \"\",\n          timestamp: responseTimestamp,\n          payload: errorToJSON(error, null),\n        };\n        setLogs((prevLogs) => [...prevLogs, notificationObj]);\n        setTabLogs(tabIndex, [...(tabs[tabIndex].logs || []), notificationObj]);\n      });\n    }\n  };\n  useEffect(() => {\n    if (!props.openrpcDocument) {\n      setOpenRpcDocument(undefined);\n    }\n    refreshOpenRpcDocument();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [transport, tabIndex]);\n\n  useEffect(() => {\n    if (tabs[tabIndex]) {\n      setJson(tabs[tabIndex].content);\n      setUrl(tabs[tabIndex].url || \"\");\n      setLogs(tabs[tabIndex].logs || []);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tabIndex]);\n\n  useEffect(() => {\n    setOpenRpcDocument(props.openrpcDocument);\n    setTabOpenRPCDocument(tabIndex, props.openrpcDocument);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.openrpcDocument]);\n\n  useEffect(() => {\n    if (!historyOpen) {\n      handlePlayButton();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [historyOpen]);\n\n  const handleTabIndexChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setTabIndex(newValue);\n  };\n\n  const onHistoryPlayClick = () => {\n    if (requestHistory[historySelectedIndex]) {\n      setJson(requestHistory[historySelectedIndex].content);\n      setUrl(requestHistory[historySelectedIndex].url);\n      setOpenRpcDocument(requestHistory[historySelectedIndex].openrpcDocument);\n      setHistoryOpen(false);\n    }\n  };\n\n  const handleTransportOptionsChange = (optionsString: string) => {\n    try {\n      setTransportOptions(JSON.parse(optionsString));\n    } catch (e) {\n      // cannot parse transport options\n    }\n  };\n\n  return (\n    <>\n      <Dialog onClose={() => setHistoryOpen(false)} aria-labelledby=\"simple-dialog-title\" open={historyOpen} >\n        <Container maxWidth=\"sm\">\n          <Grid\n            container\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style={{ padding: \"30px\", paddingTop: \"10px\", paddingBottom: \"10px\" }}>\n            <Typography color=\"textPrimary\">History</Typography>\n            {\n              requestHistory.length === 0\n                ? null\n                : <Tooltip title=\"Use\">\n                  <IconButton onClick={onHistoryPlayClick}>\n                    <PlayCircle />\n                  </IconButton>\n                </Tooltip>\n            }\n          </Grid>\n          {\n            requestHistory.length === 0\n              ? <Typography style={{ padding: \"30px\" }}>No History Yet.</Typography>\n              : <Grid container style={{ paddingBottom: \"30px\" }}>\n                <List style={{ padding: \"10px\", overflowY: \"scroll\", height: \"250px\", width: \"200px\" }}>\n                  {requestHistory.map((requestHistoryItem: any, historyIndex: number) => (\n                    <ListItem button\n                      onClick={() => setHistorySelectedIndex(historyIndex)}\n                      selected={historyIndex === historySelectedIndex}>\n                      <ListItemText\n                        primary={requestHistoryItem.content.method || \"Empty Method\"}\n                        secondary={requestHistoryItem.url || \"Empty Url\"}\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n                <MonacoEditor\n                  width=\"300px\"\n                  height=\"250px\"\n                  value={\n                    requestHistory[historySelectedIndex]\n                      ? JSON.stringify(requestHistory[historySelectedIndex].content, null, 4)\n                      : \"\"\n                  }\n                  language=\"json\"\n                  editorDidMount={() => {\n                    // noop\n                  }}\n                />\n              </Grid>\n          }\n        </Container>\n      </Dialog>\n\n      <div style={{ position: \"relative\" }}>\n        <Tabs\n          style={{ background: \"transparent\" }}\n          value={tabIndex}\n          variant=\"scrollable\"\n          indicatorColor=\"primary\"\n          onChange={handleTabIndexChange}\n        >\n          {tabs.map((tab, index) => (\n            <Tab disableRipple style={{\n              border: \"none\",\n              outline: \"none\",\n              userSelect: \"none\",\n            }} onDoubleClick={() => setTabEditing(tab, true)} label={\n              <div style={{ userSelect: \"none\" }}>\n                {tab.editing\n                  ? <InputBase\n                    value={tab.name}\n                    onChange={(ev) => handleLabelChange(ev, tab)}\n                    onBlur={() => setTabEditing(tab, false)}\n                    autoFocus\n                    style={{ maxWidth: \"80px\", marginRight: \"25px\" }}\n                  />\n                  : <Typography style={{ display: \"inline\", textTransform: \"none\", marginRight: \"25px\" }} variant=\"body1\" >{tab.name}</Typography>\n                }\n                {tabIndex === index\n                  ?\n                  <Tooltip title=\"Close Tab\">\n                    <IconButton onClick={\n                      (ev) => handleClose(ev, index)\n                    } style={{ position: \"absolute\", right: \"10px\", top: \"25%\" }} size=\"small\">\n                      <CloseIcon />\n                    </IconButton>\n                  </Tooltip>\n                  : null\n                }\n              </div>\n            }></Tab>\n          ))}\n          <Tab disableRipple style={{ minWidth: \"50px\" }} label={\n            <Tooltip title=\"Create New Tab\">\n              <IconButton onClick={() => setTabs([\n                ...tabs,\n                {\n                  name: \"New Tab\",\n                  content: { ...emptyJSONRPC, id: 0 },\n                  logs: [],\n                  openrpcDocument,\n                  url,\n                },\n              ],\n              )}>\n                <PlusIcon scale={0.5} />\n              </IconButton>\n            </Tooltip>\n          }>\n          </Tab>\n        </Tabs>\n      </div>\n      <AppBar elevation={0} position=\"static\" style={{ zIndex: 1 }}>\n        <Toolbar>\n          <img\n            height=\"30\"\n            alt=\"openrpc-logo\"\n            style={{ marginRight: \"10px\" }}\n            src=\"https://github.com/open-rpc/design/raw/master/icons/open-rpc-logo-noText/open-rpc-logo-noText%20(PNG)/128x128.png\" //tslint:disable-line\n          />\n          <Typography variant=\"h6\" color=\"textSecondary\">Inspector</Typography>\n          <TransportDropdown\n            transports={transportList}\n            onAddTransport={(addedTransport: ITransport) => {\n              setTransportList([\n                ...transportList,\n                addedTransport,\n              ]);\n            }}\n            selectedTransport={selectedTransport}\n            onChange={(changedTransport) => setSelectedTransport(changedTransport)}\n            style={{\n              marginLeft: \"10px\",\n            }}\n          />\n          <Tooltip title=\"Play\">\n            <IconButton onClick={handlePlayButton}>\n              <PlayCircle fontSize=\"large\" />\n            </IconButton>\n          </Tooltip>\n          <InputBase\n            startAdornment={\n              <>\n                <Tooltip title={connected ? \"Connected\" : \"Not Connected\"}>\n                  {connected\n                    ? <FlashOn style={{ color: green[500] }} />\n                    : <FlashOff color=\"error\" />\n                  }\n                </Tooltip>\n                {\n                  openrpcDocument\n                    ?\n                    <Tooltip title={\n                      <div style={{ textAlign: \"center\" }}>\n                        <Typography>OpenRPC Document Detected</Typography>\n                        <Typography variant=\"caption\">\n                          A JSON-RPC endpoint may respond to the rpc.discover method\n                          or a provide a static document.\n                          This adds features like auto completion to the inspector.\n                    </Typography>\n                      </div>\n                    } onClick={() => window.open(\"https://spec.open-rpc.org/#service-discovery-method\")}>\n                      <DocumentIcon style={{ color: green[500], marginRight: \"5px\", cursor: \"pointer\" }} scale={0.1} />\n                    </Tooltip>\n                    : null\n                }\n              </>\n            }\n            value={url}\n            placeholder=\"Enter a JSON-RPC server URL\"\n            onChange={\n              (event: ChangeEvent<HTMLInputElement>) => {\n                setUrl(event.target.value);\n                setTabUrl(tabIndex, event.target.value);\n              }\n            }\n            fullWidth\n            style={{ background: \"rgba(0,0,0,0.1)\", borderRadius: \"4px\", padding: \"0px 10px\", marginRight: \"5px\" }}\n          />\n          <Tooltip title=\"History\">\n            <IconButton onClick={() => setHistoryOpen(true)}>\n              <History />\n            </IconButton>\n          </Tooltip>\n          {\n            props.hideToggleTheme\n              ? null\n              :\n              <Tooltip title=\"Toggle Theme\">\n                <IconButton onClick={handleToggleDarkMode}>\n                  {props.darkMode ? <Brightness3Icon /> : <WbSunnyIcon />}\n                </IconButton>\n              </Tooltip>\n          }\n        </Toolbar>\n      </AppBar>\n      <SplitPane\n        split=\"vertical\"\n        minSize={100}\n        maxSize={-100}\n        defaultSize={\"50%\"}\n        pane2Style={{ height: \"100%\", width: \"100%\", overflow: \"auto\" }}\n        style={{ flexGrow: 1, height: \"calc(100% - 128px)\" }}>\n        <SplitPane\n          split=\"horizontal\"\n          minSize={100}\n          maxSize={-100}\n          defaultSize={(selectedTransport as IWebTransport).schema ? \"85%\" : \"100%\"}\n          pane2Style={{ height: \"100%\", width: \"100%\", overflow: \"auto\" }}\n          style={{ flexGrow: 1, height: \"calc(100% - 128px)\" }}>\n          <JSONRPCRequestEditor\n            onChange={(val) => {\n              let jsonResult;\n              try {\n                jsonResult = JSON.parse(val);\n              } catch (e) {\n                console.error(e);\n              }\n              if (jsonResult) {\n                setJson(jsonResult);\n                setTabContent(tabIndex, jsonResult);\n              }\n            }}\n            openrpcDocument={openrpcDocument}\n            value={JSON.stringify(json, null, 4)}\n          />\n          {(selectedTransport as IWebTransport).schema && <OptionsEditor\n            schema={(selectedTransport as IWebTransport).schema}\n            value={JSON.stringify(transportOptions, null, 4)}\n            onChange={handleTransportOptionsChange}>\n          </OptionsEditor>\n          }\n        </SplitPane>\n        <>\n          {logs.length > 0 &&\n            <Button\n              variant=\"contained\"\n              style={{\n                cursor: \"pointer\",\n                position: \"absolute\",\n                top: \"5px\",\n                right: \"50px\",\n                zIndex: 2,\n                background: \"rgba(255,255,255,0.2)\"\n              }}\n              onClick={handleClearButton}>\n              Clear\n            </Button>\n          }\n          {logs.length === 0 &&\n            <Container maxWidth=\"sm\">\n              <Grid container justify=\"center\" style={{ paddingTop: \"40px\" }}>\n                <Typography gutterBottom>Press the Play button to see the results here.</Typography>\n                <Typography>\n                  Use&nbsp;\n                  <Button\n                    startIcon={<Keyboard />}\n                    variant=\"contained\"\n                    disabled\n                    size=\"small\"\n                    style={{ marginRight: \"3px\" }}\n                  >\n                    CTRL + SPACE\n                   </Button>\n                  to auto-complete in the editor.\n            </Typography>\n              </Grid>\n            </Container>\n          }\n          {logs.length !== 0 &&\n            <div style={{ height: \"100%\" }}>\n              <JSONRPCLogger\n                sidebarOpen={false}\n                openrpcDocument={openrpcDocument}\n                logs={logs}\n                sidebarAlign={\"right\"}\n                openRecentPayload={true} />\n            </div>\n          }\n        </>\n      </SplitPane>\n    </>\n  );\n};\n\nexport default Inspector;\n","import { useState } from \"react\";\nimport * as qs from \"qs\";\n\nconst useQueryParams = (depth?: number) => {\n  const parse = () => {\n    return qs.parse(window.location.search, {\n      ignoreQueryPrefix: true,\n      depth: depth || 100,\n      decoder(str) {\n        if (/^([+-]?[0-9]\\d*|0)$/.test(str)) {\n          return parseInt(str, 10);\n        }\n        if (str === \"false\") {\n          return false;\n        }\n        if (str === \"true\") {\n          return true;\n        }\n        return decodeURIComponent(str);\n      },\n    });\n  };\n  const [query] = useState(parse());\n  return [query];\n};\n\nexport default useQueryParams;\n","import React, { useEffect } from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\n\nimport { lightTheme, darkTheme } from \"../themes/openrpcTheme\";\nimport useDarkMode from \"use-dark-mode\";\nimport Inspector from \"./Inspector\";\nimport useQueryParams from \"../hooks/useQueryParams\";\nimport * as monaco from \"monaco-editor\";\n\nconst App: React.FC = () => {\n  const darkMode = useDarkMode();\n  const [query] = useQueryParams();\n  const theme = darkMode.value ? darkTheme : lightTheme;\n  useEffect(() => {\n    const t = darkMode.value ? \"vs-dark\" : \"vs\";\n    monaco.editor.setTheme(t);\n  }, [darkMode.value]);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n\n      <Inspector\n        onToggleDarkMode={darkMode.toggle}\n        darkMode={darkMode.value}\n        customTransport={query.customTransport}\n        transport={query.transport}\n        url={query.url}\n        openrpcDocument={query.openrpcDocument}\n        request={query.request}\n      />\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./containers/App\";\nimport \"./App.css\";\nimport \"./splitpane.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}